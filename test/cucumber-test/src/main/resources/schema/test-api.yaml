openapi: "3.1.0"
info:
  version: 1.0.0
  title: My test API
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
paths:
  /profiles:
    parameters:
      - $ref: "#/components/parameters/Request-ID"
    get:
      responses:
        200:
          description: Get all profiles
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Profiles"
        400:
          $ref: "#/components/responses/400ErrorResponse"
    post:
      requestBody:
        description: Create a profile
        content:
          application/json; charset=UTF-8:
            schema:
              $ref: "#/components/schemas/Profile"
      responses:
        201:
          description: Created
        400:
          $ref: "#/components/responses/400ErrorResponse"
  /profiles/{id}:
    parameters:
      - $ref: "#/components/parameters/Request-ID"
      - name: id
        required: true
        in: path
        schema:
          type: number
          format: int32
    get:
      responses:
        200:
          description: Get profile
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Profile"
        400:
          $ref: "#/components/responses/400ErrorResponse"
  /examples:
    get:
      responses:
        200:
          description: Example value
          content:
            application/json:
              schema:
                type: object
                properties:
                  attr:
                    type: string
                  value:
                    type: string
                    format: email
                examples:
                  - attr: "email"
                    value: ktakashi@ymail.com
  /examples/objects:
    get:
      responses:
        200:
          description: Example value
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExampleObject"
components:
  parameters:
    Request-ID:
      name: Request-ID
      description: Request ID
      required: true
      in: header
      schema:
        type: string
        format: uuid
  responses:
    400ErrorResponse:
      description: Invalid request
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
  schemas:
    Profiles:
      type: array
      items:
        $ref: "#/components/schemas/Profile"
    Profile:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        created_at:
          type: string
          format: datetime
    Error:
      type: object
      properties:
        type:
          type: string
          enum:
            - validation-error
            - unique-constraint-error
            - internal-error
    ExampleObject:
      type: object
      properties:
        attr:
          type: string
        value:
          type: string
      examples:
        - attr: "uuid"
          value: 4395c48d-091f-4602-8998-9cfed505e400
        - attr: "email"
          value: ktakashi@ymail.com
